name: Build & Deploy

on:
  push:
    tags:
      - 'v**'
  workflow_dispatch:

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    outputs:
      packageVersion: ${{ steps.packageVersion.outputs.packageVersion }}

    steps:

      - uses: actions/checkout@v3
        with:
          # This is very important and necessary. Otherwise, the action won't pick up the git tag you assigned
          fetch-depth: 0

      - name: "Generate the package version"
        run: |
          Version=$(./.github/gitversion.sh)
          echo "PackageVersion=$Version" >> $GITHUB_ENV


      - uses: franzbischoff/replace_envs@v1
        name: "Replace the version inside the package.json"
        with:
          from_file: 'package.json'
          to_file: 'package.json'
          commit: 'true'

      - name: Set up Node.js version
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'

      - name: Install dependencies & build
        run: |
          yarn install
          yarn build

      - name: Publish website artifact
        uses: actions/upload-artifact@v3
        with:
          name: trunk-based-website
          path: ./build/

      - name: Publish website configs artifact
        uses: actions/upload-artifact@v3
        with:
          name: trunk-based-website-configs
          path: ./src/configs

      - id: packageVersion
        run: echo "::set-output name=packageVersion::$PackageVersion"

  devDeploy:
    name: "Development Deployment"
    needs: build
    uses: ./.github/workflows/deploy-template.yml
    with:
      environment: Development
      packageVersion: ${{needs.build.outputs.packageVersion}}

  qaDeploy:
    name: "QA Deployment"
    needs: build
    uses: ./.github/workflows/deploy-template.yml
    with:
      environment: QA
      packageVersion: ${{needs.build.outputs.packageVersion}}

  stagingDeploy:
    name: "Staging Deployment"
    needs: build
    uses: ./.github/workflows/deploy-template.yml
    with:
      environment: Staging
      packageVersion: ${{needs.build.outputs.packageVersion}}

  productionDeploy:
    name: "Production Deployment"
    needs: build
    uses: ./.github/workflows/deploy-template.yml
    with:
      environment: Production
      packageVersion: ${{needs.build.outputs.packageVersion}}


